{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malsy\\\\repos\\\\ezoic-final\\\\client\\\\src\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat(_ref) {\n  _s();\n\n  let {\n    socket,\n    userName,\n    room\n  } = _ref;\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n\n  const sendMessage = async () => {\n    const date = new Date();\n    console.log(date);\n\n    if (currentMessage !== \"\") {\n      const messageData = {\n        room: room,\n        author: userName,\n        message: currentMessage,\n        time: new Intl.DateTimeFormat('en-US', {\n          timeStyle: \"short\"\n        }).format(date)\n      };\n      console.log(messageData.time);\n      console.log(messageData);\n      await socket.emit(\"send_message\", messageData); // line 23 sets messageList not only when we receive\n      // a message(31), but when we send a message as well.\n\n      setMessageList(list => [...list, messageData]);\n      setCurrentMessage(\"\");\n    }\n  }; // when message event is emitted, keeps track of previous data (messages)\n\n\n  useEffect(() => {\n    socket.on(\"receive_message\", data => {\n      setMessageList(list => [...list, data]);\n    });\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Ezoic Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-body\",\n      children: /*#__PURE__*/_jsxDEV(ScrollToBottom, {\n        className: \"message-container\",\n        children: messageList.map((messageContent, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            id: userName === messageContent.author ? \"other\" : \"you\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-content\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: messageContent.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"time\",\n                  children: messageContent.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"author\",\n                  children: messageContent.author\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: currentMessage,\n        placeholder: \"Chat...\",\n        onChange: event => {\n          setCurrentMessage(event.target.value);\n        },\n        onKeyDown: event => {\n          event.key === \"Enter\" && sendMessage();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"\\u25BA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"gDKz+24cg75HOdfXSFFmVy0ndt0=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","ScrollToBottom","Chat","socket","userName","room","currentMessage","setCurrentMessage","messageList","setMessageList","sendMessage","date","Date","console","log","messageData","author","message","time","Intl","DateTimeFormat","timeStyle","format","emit","list","on","data","map","messageContent","index","event","target","value","key"],"sources":["C:/Users/malsy/repos/ezoic-final/client/src/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ScrollToBottom from 'react-scroll-to-bottom';\n\nfunction Chat({socket, userName, room}) {\n  const [currentMessage, setCurrentMessage] = useState(\"\")\n  const [messageList, setMessageList] = useState([]);\n\n  const sendMessage = async () => {\n    const date = new Date();\n    console.log(date);\n    if (currentMessage !== \"\") {\n      const messageData = {\n        room: room,\n        author: userName,\n        message: currentMessage,\n        time: new Intl.DateTimeFormat('en-US', {timeStyle: \"short\"}).format(date)\n      }\n      console.log(messageData.time);\n      console.log(messageData);\n      await socket.emit(\"send_message\", messageData)\n      // line 23 sets messageList not only when we receive\n      // a message(31), but when we send a message as well.\n      setMessageList((list) => [...list, messageData])\n      setCurrentMessage(\"\");\n    }\n  };\n\n  // when message event is emitted, keeps track of previous data (messages)\n  useEffect(() => {\n    socket.on(\"receive_message\", (data) => {\n      setMessageList((list) => [...list, data])\n    })\n  }, [socket])\n\n  return (\n    <div className=\"chat-window\">\n      <div className=\"chat-header\">\n        <p>Ezoic Chat</p>\n      </div>\n\n      <div className=\"chat-body\">\n        <ScrollToBottom className=\"message-container\">\n          {messageList.map((messageContent, index) => {\n            return (\n            <div\n              className=\"message\"\n              id={userName === messageContent.author ? \"other\" : \"you\"}\n              key={index}\n            >\n              <div>\n                <div className=\"message-content\">\n                  <p>{messageContent.message}</p>\n                </div>\n                <div className=\"message-meta\">\n                  <p id=\"time\">{messageContent.time}</p>\n                  <p id=\"author\">{messageContent.author}</p>\n                </div>\n              </div>\n            </div>\n            )\n          })}\n        </ScrollToBottom>\n      </div>\n      <div className=\"chat-footer\">\n        <input\n          type=\"text\"\n          value={currentMessage}\n          placeholder=\"Chat...\"\n          onChange={(event) => {\n            setCurrentMessage(event.target.value);\n          }}\n          onKeyDown={(event) => {\n            event.key === \"Enter\" && sendMessage();\n          }}\n        />\n        <button onClick={sendMessage}>&#9658;</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Chat;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,wBAA3B;;;AAEA,SAASC,IAAT,OAAwC;EAAA;;EAAA,IAA1B;IAACC,MAAD;IAASC,QAAT;IAAmBC;EAAnB,CAA0B;EACtC,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,EAAD,CAApD;EACA,MAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;;EAEA,MAAMW,WAAW,GAAG,YAAY;IAC9B,MAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;IACAC,OAAO,CAACC,GAAR,CAAYH,IAAZ;;IACA,IAAIL,cAAc,KAAK,EAAvB,EAA2B;MACzB,MAAMS,WAAW,GAAG;QAClBV,IAAI,EAAEA,IADY;QAElBW,MAAM,EAAEZ,QAFU;QAGlBa,OAAO,EAAEX,cAHS;QAIlBY,IAAI,EAAE,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;UAACC,SAAS,EAAE;QAAZ,CAAjC,EAAuDC,MAAvD,CAA8DX,IAA9D;MAJY,CAApB;MAMAE,OAAO,CAACC,GAAR,CAAYC,WAAW,CAACG,IAAxB;MACAL,OAAO,CAACC,GAAR,CAAYC,WAAZ;MACA,MAAMZ,MAAM,CAACoB,IAAP,CAAY,cAAZ,EAA4BR,WAA5B,CAAN,CATyB,CAUzB;MACA;;MACAN,cAAc,CAAEe,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUT,WAAV,CAAX,CAAd;MACAR,iBAAiB,CAAC,EAAD,CAAjB;IACD;EACF,CAlBD,CAJsC,CAwBtC;;;EACAP,SAAS,CAAC,MAAM;IACdG,MAAM,CAACsB,EAAP,CAAU,iBAAV,EAA8BC,IAAD,IAAU;MACrCjB,cAAc,CAAEe,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUE,IAAV,CAAX,CAAd;IACD,CAFD;EAGD,CAJQ,EAIN,CAACvB,MAAD,CAJM,CAAT;EAMA,oBACE;IAAK,SAAS,EAAC,aAAf;IAAA,wBACE;MAAK,SAAS,EAAC,aAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAKE;MAAK,SAAS,EAAC,WAAf;MAAA,uBACE,QAAC,cAAD;QAAgB,SAAS,EAAC,mBAA1B;QAAA,UACGK,WAAW,CAACmB,GAAZ,CAAgB,CAACC,cAAD,EAAiBC,KAAjB,KAA2B;UAC1C,oBACA;YACE,SAAS,EAAC,SADZ;YAEE,EAAE,EAAEzB,QAAQ,KAAKwB,cAAc,CAACZ,MAA5B,GAAqC,OAArC,GAA+C,KAFrD;YAAA,uBAKE;cAAA,wBACE;gBAAK,SAAS,EAAC,iBAAf;gBAAA,uBACE;kBAAA,UAAIY,cAAc,CAACX;gBAAnB;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAIE;gBAAK,SAAS,EAAC,cAAf;gBAAA,wBACE;kBAAG,EAAE,EAAC,MAAN;kBAAA,UAAcW,cAAc,CAACV;gBAA7B;kBAAA;kBAAA;kBAAA;gBAAA,QADF,eAEE;kBAAG,EAAE,EAAC,QAAN;kBAAA,UAAgBU,cAAc,CAACZ;gBAA/B;kBAAA;kBAAA;kBAAA;gBAAA,QAFF;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAJF;YAAA;cAAA;cAAA;cAAA;YAAA;UALF,GAGOa,KAHP;YAAA;YAAA;YAAA;UAAA,QADA;QAiBD,CAlBA;MADH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QALF,eA4BE;MAAK,SAAS,EAAC,aAAf;MAAA,wBACE;QACE,IAAI,EAAC,MADP;QAEE,KAAK,EAAEvB,cAFT;QAGE,WAAW,EAAC,SAHd;QAIE,QAAQ,EAAGwB,KAAD,IAAW;UACnBvB,iBAAiB,CAACuB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjB;QACD,CANH;QAOE,SAAS,EAAGF,KAAD,IAAW;UACpBA,KAAK,CAACG,GAAN,KAAc,OAAd,IAAyBvB,WAAW,EAApC;QACD;MATH;QAAA;QAAA;QAAA;MAAA,QADF,eAYE;QAAQ,OAAO,EAAEA,WAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAZF;IAAA;MAAA;MAAA;MAAA;IAAA,QA5BF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA6CD;;GA5EQR,I;;KAAAA,I;AA8ET,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}